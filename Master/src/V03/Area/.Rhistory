data(WeightData)
objects('package:UsingR')
data(package=UsingR)
data(package="UsingR")
library(simpleR)
library("simpleR")
install.packages("simpleR")
library("simpleR")
"weight", "height", "gender", "sample.weight"))
"weight", "height", "gender", "sample.weight"), class = "data.frame")
16596, 65058.96, 6299.12, 3159.64, 5743.55)), class = "data.frame")
"5337"), class = "data.frame")
3+4
"5177", "5178", "5179", "5180", "5181", "5182", "5183", "5184",
"WeightData" <- structure(list(age = c(3, 16, 86, 44, 144, 6, 80, 42, 18, 72,
38, 99, 10, 68, 10, 135, 128, 57, 4, 131, 54, 103, 60, 11, 75,
42, 60, 30, 3, 8, 3, 79, 8, 63, 27, 25, 8, 104, 71, 47, 56, 5,
125, 54, 19, 126, 12, 71, 47, 93, 10, 54, 41, 7, 86, 9, 20, 97,
5, 3, 25, 2, 113, 18, 100, 140, 46, 47, 113, 83, 67, 6, 91, 122,
7, 47, 17, 8, 98, 8, 118, 6, 3, 8, 44, 6, 144, 134, 3, 28, 72,
6, 31, 16, 51, 4, 3, 131, 33, 101, 102, 17, 19, 42, 39, 16, 12,
10, 112, 42, 3, 118, 3, 62, 16, 143, 9, 81, 56, 50, 33, 49, 63,
129, 8, 32, 2, 120, 4, 138, 71, 106, 57, 21, 82, 55, 113, 7,
63, 8, 97, 38, 5, 74, 4, 115, 70, 22, 118, 98, 18, 56, 11, 17,
source('~/.active-rstudio-document')
attach(WeightData)
age.yr = cut(age,seq(0,144,by=12),labels=0:11)
age.yr
boxplot(weight~age.yr)
data(carbon)
boxplot(carbon)
View(carbon)
attach(carbon)
boxplot(Monoxide~Site)
data(babies)
attach(babies)
plot(pairs(babies))
pairs(babies)
plot(birthweight,gestation)
View(babies)
plot(wt,gestation)
plot(wt,gestation,pch=smoke)
source('~/Dropbox/MBA Dados/Problemas_28-09-05.R')
library(UsingR)
ls
ls()
data()
data(EuStockMarkets)
EuStockMarkets
com = cor(EuStockMarkets)
corrplot(com)
library(ggvis2)
library(ggvis)
corrplot(com)
library(ggplot)
corrplot(com)
?corrplot
??corrplot
library(corrplot)
install.packages("corrplot")
corrplot(com)
library("corrplot")
corrplot(com)
corrplot(com, method="square")
corrplot(com, upper="square")
corrplot.mixed(com, upper="square")
corrplot.mixed(com)
corrplot.mixed(com, upper="square")
library("UsingR")
data("vacation")
x = vacation
simple.eda(vacation)
simple.median.test(x,median=24)
median(x)
mean(x)
simple.median.test(x,median=24)
simple.mean.test(x,mean=24)
ybarra=24;
s=stdev(x);
n=length(x)
s=Stdev(x);
?stdev
??stdev
s=sqrt(var(x));
ybarrat=24;
ymedia = mean(x)
t = (ybarrat-ymedia)/(s/sqrt(n))
pt(t,df=n-1)
t
pt(t,df=n-1)
data("smokyph")
x = smokyph[['waterph']]
simple.eda(waterph)
simple.eda(x)
median(x)
simple.median.test(x,median=7)
?prop.test
prop.test(440, 900, p-.5)
prop.test(440, 900, p=.5)
data(cancer)
x=cancer
x=cancer[['stomach']]
simple.eda(x)
simple.median.test(x,median=100)
median(x)
prop.test(c(45,56),c(45+35,56+47))
1.1
data("homework")
x1=homework[Private]
x1=homework[,Private]
x1=subset(homework, select = "Private")
x2=subset(homework, select = "Public")
plot(x1,x2)
boxplot(x1,x2)
boxplot(x1,horizontal=True)
boxplot(x1,horizontal=T)
boxplot(x2,horizontal=T)
?parf
?par
boxplot(homework)
simple.eda(x1)
simple.eda(x2)
t.test(x1,x2)
hist(x1)
hist(x1,x2)
data("corn")
corn
boxplot(corn)
x1=subset(corn, select = "New")
x2=subset(corn, select = "Standard")
t.test(x1,x2)
t.test(x1,x2, paired = T)
t.test(x1,x2, paired = TRUE)
x1
x2
t.test(x1,x2, paired = TRUE)
x1=as.vector(subset(corn, select = "New"))
x2=as.vector(subset(corn, select = "Standard"))
t.test(x1,x2)
t.test(x1,x2, paired = TRUE)
typeof(x1)
x1=subset(corn, select = "New")
x2=subset(corn, select = "Standard")
t.test(x1,x2)
t.test(x1,x2, paired = TRUE)
?as.vector
x1=as.vector(x1,mode=numeric)
x1=as.vector(x1,mode="numeric")
x1=x1[,1]
typeof(x1)
x2=x2[,1]
t.test(x1,x2, paired = TRUE)
data("blood")
blood
x1=subset(blood, select = "Machine")
x2=subset(blood, select = "Expert")
t.test(x1,x2, paired = TRUE)
x1=x1[,1]
x2=x2[,1]
t.test(x1,x2, paired = TRUE)
data("cabinets")
library("SimppleR")
library("Simpple")
library("Simple")
library("SimpleR")
data("cabinets")
library("simple")
library("simpleR")
library("Simple")
data("cabinets")
install.packages("Simple")
change r version
?version
R.Version
R.Version()
export RSTUDIO_WHICH_R=/usr/local/bin/R
library(car)
library(obkrtest)
library(pbkrtest)
install.packages("pbkrtest")
?install.packages
install.packages("pbkrtest", contrib.url(https://cran.r-project.org/src/contrib/Archive/pbkrtest/pbkrtest_0.4-4.tar.gz))
install.packages("pbkrtest", contrib.url("https://cran.r-project.org/src/contrib/Archive/pbkrtest/pbkrtest_0.4-4.tar.gz"))
install.packages("pbkrtest", contrib.url("https://cran.r-project.org/src/contrib/Archive/pbkrtest/pbkrtest_0.4-1.tar.gz"))
R.Version()
install.packages("RSelenium")
RSelenium::checkForServer()
library("RSelenium")
RSelenium::startServer()
remDr <- remoteDriver(remoteServerAddr = "localhost"
, port = 4444
, browserName = "firefox"
)
remDr$open()
remDr$getStatus()
remDr$navigate("http://www.google.com")
remDr$navigate("http://idg.receita.fazenda.gov.br/")
remDr$navigate("http://www.receita.fazenda.gov.br/Aplicacoes/ATSPO/Certidao/CNDConjuntaSegVia/NICertidaoSegVia.asp?Tipo=1")
webElem <- remDr$findElement(using = 'name', value = "N1")
webElem <- remDr$findElement(using = 'name', value = "NI")
webElem$getElementAttribute("id")
webElem$getElementAttribute("class")
webElem$getElementAttribute("name")
webElem$sendKeysToElement(list("R Cran"))
CNPJ1 = "103418620001-31"
webElem$sendKeysToElement(list(CNPJ1))
CNPJ1 = "10341862000131"
webElem$sendKeysToElement(list(CNPJ1))
webCaptcha <= remDr$findElement(using = 'name', value = "txtTexto_captcha_serpro_gov_br")
webCaptcha <= remDr$findElement(using = 'id', value = "txtTexto_captcha_serpro_gov_br")
remDr$navigate("http://www.receita.fazenda.gov.br/Aplicacoes/ATSPO/Certidao/CNDConjuntaSegVia/NICertidaoSegVia.asp?Tipo=1")
webElem <- remDr$findElement(using = 'name', value = "NI")
webCaptcha <= remDr$findElement(using = 'id', value = "txtTexto_captcha_serpro_gov_br")
webElem <= remDr$findElement(using = 'id', value = "txtTexto_captcha_serpro_gov_br")
webCaptcha <- remDr$findElement(using = 'id', value = "txtTexto_captcha_serpro_gov_br")
EnterKey = "\uE007"
library("RSelenium")
RSelenium::startServer()
remDr <- remoteDriver(remoteServerAddr = "localhost"
, port = 4444
, browserName = "firefox"
)
remDr$open()
remDr$getStatus()
library("RSelenium")
## RSelenium::checkForServer()
RSelenium::startServer()
remDr <- remoteDriver(remoteServerAddr = "localhost"
, port = 4444
, browserName = "firefox"
)
remDr$open()
remDr$getStatus()
remDr$navigate("http://idg.receita.fazenda.gov.br/")
remDr$navigate("http://www.receita.fazenda.gov.br/Aplicacoes/ATSPO/Certidao/CNDConjuntaSegVia/NICertidaoSegVia.asp?Tipo=1")
webElem <- remDr$findElement(using = 'name', value = "NI")
webCaptcha <- remDr$findElement(using = 'id', value = "txtTexto_captcha_serpro_gov_br")
summary(webCaptcha)
textboxCaptcha <- remDr$findElement(using = 'id', value = "txtTexto_captcha_serpro_gov_br")
imagemCaptcha <- remDr$findElement(using = 'id', value = "imgCaptchaSerpro")
summary(imagemCaptcha)
plot(imagemCaptcha)
ii = imagemCaptcha$getElementAttribute("src")
ii
imagemCaptchaLink = imagemCaptcha$getElementAttribute("src")
remDr$navigate("http://www.receita.fazenda.gov.br/PessoaJuridica/CNPJ/cnpjreva/Cnpjreva_Solicitacao.asp")
c1 = "73178600000118"
textboxCNPJ <- remDr$findElement(using = 'name', value = "cnpj")
textboxCNPJ <- remDr$findElement(using = 'id', value = "cnpj")
?cov
## install.packages("jpeg")
## install.packages("biOps")
## install.packages("imager")
library("lattice")
library("pixmap")
library("jpeg")
#library("biOps")
library("imager")
## Dados Globais de Diretorios
mainDir = "/Users/mauricioalouan/Dropbox/MLAgro";
#mainDir = "C:/Users/A56218964/Desktop";
verDir = "V02";
ArqArea = "area"
ArqATipo = "jpg"
ArqItem = "i1"
ArqITipo = "png"
ArqArea = paste(ArqArea,".",ArqATipo,sep="")
ArqItem = paste(ArqItem,".",ArqITipo,sep="")
## 1. Carrega Area Maior
setwd(paste(mainDir,verDir,"Area",sep="/"))
Iarea = load.image(ArqArea);
Iarea.g = grayscale(Iarea)
Iar = nrow(Iarea.g);
Iac = ncol(Iarea.g);
rm(Iarea);
Cr = Iar/2;
Cc = Iac/2;
Csr= 100;
Csh= 100;
Csr= 50;
Csh= 50;
Csc= 50;
IAs= Iarea.g[(Cr-Csr):(Cr+Csr),(Cc-Csc):(Cc+Csc)]
plot(IAs);
image(IAs,useRaster = TRUE)
image(IAs,useRaster = TRUE, col = "gray")
image(IAs,useRaster = TRUE, col = "grayscale")
image(IAs,useRaster = TRUE)
Csr= 100;
Csc= 100;
IAs= Iarea.g[(Cr-Csr):(Cr+Csr),(Cc-Csc):(Cc+Csc)]
image(IAs,useRaster = TRUE)
image(Iarea.g,useRaster = TRUE)
Iarea.s = Iarea.g[,]
image(Iarea.s,useRaster = TRUE)
?"image"
IAs= Iarea.s[(Cr-Csr):(Cr+Csr),(Cc-Csc):(Cc+Csc)]
plot(IAs);
image(IAs,useRaster = TRUE, col = topo.colors())
image(IAs,useRaster = TRUE, col = topo.colors(10))
image(IAs,useRaster = TRUE, col = topo.colors(12))
image(IAs,useRaster = TRUE, col = terrain.colors(12))
image(Iarea.s,useRaster = TRUE, col= terrain.colors(12))
Csr= 300;
Csc= 300;
IAs= Iarea.s[(Cr-Csr):(Cr+Csr),(Cc-Csc):(Cc+Csc)]
image(IAs,useRaster = TRUE, col = terrain.colors(12))
points(Cr,Ch),col="red",cex=10)
points(Cr,Ch,col="red",cex=10)
points(Cr,Cc,col="red",cex=10)
image(IAs,useRaster = TRUE, col = terrain.colors(12))
+ points(Cr,Cc,col="red",cex=10)
image(IAs,useRaster = TRUE, col = terrain.colors(12))
points(150,150,col="red",cex=10)
points(300,300,col="red",cex=5)
points(.5,.5,col="red",cex=5)
Iar = Iar-100;
Iar=Iar+100
Cr = Cr-100
image(IAs,useRaster = TRUE, col = terrain.colors(12))
points(.5,.5,col="red",cex=5)
Cr = Cr-300
IAs= Iarea.s[(Cr-Csr):(Cr+Csr),(Cc-Csc):(Cc+Csc)]
image(IAs,useRaster = TRUE, col = terrain.colors(12))
points(.5,.5,col="red",cex=5)
pt = locator(1)
Ch = Ch-100
IAs= Iarea.s[(Cr-Csr):(Cr+Csr),(Cc-Csc):(Cc+Csc)]
image(IAs,useRaster = TRUE, col = terrain.colors(12))
points(.5,.5,col="red",cex=5)
Cc = Cc-100
IAs= Iarea.s[(Cr-Csr):(Cr+Csr),(Cc-Csc):(Cc+Csc)]
image(IAs,useRaster = TRUE, col = terrain.colors(12))
points(.5,.5,col="red",cex=5)
Cr = Cr + 20
IAs= Iarea.s[(Cr-Csr):(Cr+Csr),(Cc-Csc):(Cc+Csc)]
image(IAs,useRaster = TRUE, col = terrain.colors(12))
points(.5,.5,col="red",cex=5)
?dev.new
?x11
dev.capabilities()
pt = locator(1)
image(IAs,useRaster = TRUE, col = terrain.colors(120))
